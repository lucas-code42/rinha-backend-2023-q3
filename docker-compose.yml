services:
  api1: # API - Instância 01
    image: api
    hostname: api1
    build:
      context: ./
      dockerfile: dockerfile
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - rinhaBackend

  api2: # API - Instância 01
    image: api
    hostname: api2
    build:
      context: ./
      dockerfile: dockerfile
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - rinhaBackend

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
    networks:
      - rinhaBackend
  
  db:
    container_name: mysql
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=rinhaBackend
    volumes:
      - ./.docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.5GB"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 10s
      retries: 3
    networks:
      - rinhaBackend

networks:
  rinhaBackend:
    driver: bridge
